/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 scene.gltf --transform 
Files: scene.gltf [62.45KB] > C:\Users\Mae K\OneDrive - nevada.unr.edu\Documents\2023-2024\Winter 2024\IrvineHacks 2024\my-app\public\scene-transformed.glb [271.9KB] (-335%)
Author: z1jay (https://sketchfab.com/z1jay.FollwMyInstagram)
License: CC-BY-4.0 (http://creativecommons.org/licenses/by/4.0/)
Source: https://sketchfab.com/3d-models/free-rigged-toothless-meme-193ce9edac9c4576a6131ff7d588ec2b
Title: free rigged toothless meme
*/
//Use: npx gltfjsx scene.gltf --transform
import React, { useRef } from 'react'
import { useGLTF } from '@react-three/drei'

export default function Toothless(props) {
  const { nodes, materials } = useGLTF('/Toothless/scene-transformed.glb')
  return (
    <group {...props} dispose={null}>
      <primitive object={nodes.GLTF_created_0_rootJoint} />
      <skinnedMesh geometry={nodes.Object_7.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_7.skeleton} />
      <skinnedMesh geometry={nodes.Object_8.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_8.skeleton} />
      <skinnedMesh geometry={nodes.Object_10.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_10.skeleton} />
      <skinnedMesh geometry={nodes.Object_11.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_11.skeleton} />
      <skinnedMesh geometry={nodes.Object_13.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_13.skeleton} />
      <skinnedMesh geometry={nodes.Object_14.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_14.skeleton} />
      <skinnedMesh geometry={nodes.Object_16.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_16.skeleton} />
      <skinnedMesh geometry={nodes.Object_17.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_17.skeleton} />
      <skinnedMesh geometry={nodes.Object_18.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_18.skeleton} />
      <skinnedMesh geometry={nodes.Object_20.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_20.skeleton} />
      <skinnedMesh geometry={nodes.Object_21.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_21.skeleton} />
      <skinnedMesh geometry={nodes.Object_22.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_22.skeleton} />
      <skinnedMesh geometry={nodes.Object_24.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_24.skeleton} />
      <skinnedMesh geometry={nodes.Object_26.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_26.skeleton} />
      <skinnedMesh geometry={nodes.Object_28.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_28.skeleton} />
      <skinnedMesh geometry={nodes.Object_29.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_29.skeleton} />
      <skinnedMesh geometry={nodes.Object_31.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_31.skeleton} />
      <skinnedMesh geometry={nodes.Object_32.geometry} material={materials.PaletteMaterial002} skeleton={nodes.Object_32.skeleton} />
      <skinnedMesh geometry={nodes.Object_34.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_34.skeleton} />
      <skinnedMesh geometry={nodes.Object_36.geometry} material={materials.PaletteMaterial001} skeleton={nodes.Object_36.skeleton} />
    </group>
  )
}

useGLTF.preload('/Toothless/scene-transformed.glb')
